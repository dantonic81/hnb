# local development
version: '3.7'

x-common-service-config: &common-service-config
  restart: unless-stopped

services:
  dwh:
    container_name: dwh
    image: postgres:11-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./sql-scripts:/docker-entrypoint-initdb.d  # Mount the SQL scripts

    networks:
      - docker_example_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U dwh -d hnb" ]
      interval: 30s
      timeout: 10s
      retries: 3
    <<: *common-service-config

  docker_example_user_code:
    build:
      dockerfile: Dockerfile_user_code
    container_name: docker_example_user_code
    image: docker_example_user_code_image
    restart: always
    environment:
      DAGSTER_POSTGRES_USER: "dwh"
      DAGSTER_POSTGRES_PASSWORD: "dwh"
      DAGSTER_POSTGRES_DB: "hnb"
      DAGSTER_CURRENT_IMAGE: "docker_example_user_code_image"
    networks:
      - docker_example_network
    healthcheck:
      test: ["CMD", "timeout", "5s", "bash", "-c", ":> /dev/tcp/127.0.0.1/4000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  docker_example_webserver:
    build:
      dockerfile: Dockerfile_dagster
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    container_name: docker_example_webserver
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      DAGSTER_POSTGRES_USER: "dwh"
      DAGSTER_POSTGRES_PASSWORD: "dwh"
      DAGSTER_POSTGRES_DB: "hnb"
    volumes: # Make docker client accessible so we can terminate containers from the webserver
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - docker_example_network
    depends_on:
      - dwh
      - docker_example_user_code
    healthcheck:
      test: ["CMD", "timeout", "5s", "bash", "-c", ":> /dev/tcp/127.0.0.1/3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  docker_example_daemon:
    build:
      dockerfile: Dockerfile_dagster
    entrypoint:
      - dagster-daemon
      - run
    container_name: docker_example_daemon
    restart: on-failure
    environment:
      DAGSTER_POSTGRES_USER: "dwh"
      DAGSTER_POSTGRES_PASSWORD: "dwh"
      DAGSTER_POSTGRES_DB: "hnb"
    volumes: # Make docker client accessible so we can launch containers using host docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - docker_example_network
    depends_on:
      - dwh
      - docker_example_user_code
    healthcheck:
      test: ["CMD", "dagster-daemon", "liveness-check"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data: {}

networks:
  docker_example_network:
    driver: bridge
    name: docker_example_network
